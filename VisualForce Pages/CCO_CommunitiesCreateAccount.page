<apex:page showHeader="false" standardStyleSheets="false" sidebar="false" expires="0" cache="true" docType="html" controller="TargetX_Base.TX_CommunitiesBase" extensions="CCO_CommunitiesSelfRegController">
    <style>
        .targetx-application-form-slide label span{
            color:#585e69 !important;
        }
        .cc-text-review {
        	color: #F1B434!important;
        }
    </style>
  <apex:composition template="{!defaultTemplate}">

    <apex:define name="content">
   	<div class="row">
   		<div class="col-md-6">
   			<h3 class="cco-blue">Start Your Fast &amp; Free Online Application</h3>
   			<p>
   				The application is free and should take about 15 minutes to complete. You can finish your application or return to it later. Your information will be saved so you can pick up where you left off.
 			</p>
  			<p>
  				Create your application account and start your application. Our admissions team is standing by at <a href="tel:+18666376292" title="Call Support">866.637.6292</a> or <a href="mailto:cco@champlain.edu" title="Email Support">cco@champlain.edu</a> if you need assistance.
  			</p>
  				
   		</div>
   		<div class="col-md-6">
			<apex:form id="theForm" forceSSL="true">
	        <ul class="nav nav-tabs nav-justified cco-tabs">
	   				<li role="presentation" class="active">
	 					<a href="/CCO_CommunitiesCreateAccount" class="text-uppercase">
	 						Start New Application
	 					</a>
	   				</li>
	   				<li role="presentation">
	  					<apex:outputLink rendered="{!ISPICKVAL($User.UserType,'Guest')}" title="Continue Your Application" value="{!$Page.CCO_SiteLogin}" styleClass="text-uppercase">
	                    	Continue Application
	                  	</apex:outputLink>
	   				</li>
	   			</ul>
		        <ul class="targetx-application-form-slides">
		          <li class="targetx-application-form-slide targetx-active">
		            <apex:pageMessages id="error"/>
		            <h1 class="targetx-application-form-title">Create Application Account</h1>
		            <label>
		              <apex:inputText styleClass="targetx-input-text" required="true" id="firstName" value="{!firstName}" label="First Name"/>
		              <span class="text-uppercase">First Name</span>
		            </label>
		            <label>
		              <apex:inputText styleClass="targetx-input-text" required="true" id="lastName" value="{!lastName}" label="Last Name"/>
		              <span class="text-uppercase">Last Name</span>
		            </label>
		            <label>
		              <apex:inputText styleClass="targetx-input-text" required="true" id="email" value="{!email}" label="{!$Label.site.email}"/>
		              <span class="text-uppercase">Email</span>
		            </label>
		            
		            <div>
		              <apex:commandLink action="{!registerUser}" styleClass="btn btn-primary btn-muted text-uppercase" value="Create Account" id="submit"/>
		              <apex:outputLink styleClass="btn btn-link text-muted" rendered="{!ISPICKVAL($User.UserType,'Guest')}" value="{!$Site.Prefix}/CCO_ForgotPassword">
		              	Forgot Password
		              </apex:outputLink>
		            </div>
		          </li>
		        </ul>
	      	</apex:form>    		
   		</div>
   	</div>
    </apex:define>

  </apex:composition>
  <script>
      function applyDirty(elem){
          if(elem.val()){
              elem.addClass('targetx-dirty');
          }
      }

      function watch() {
          var elems = $('.targetx-input-text');
          elems.change(function () {
              applyDirty($(this));
          });

          elems.each(function() {
              applyDirty($(this));
          })
      }
      watch();
      
      // See if we should prefill from URL
      function prefillDetails(){
      	try{
			let pairs = location.search.slice(1).split('&');console.log(pairs);
			let result = {};
			pairs.forEach(function(pair){
				pair = pair.split('=');
				result[pair[0]] = escape(decodeURIComponent(pair[1] || ''));
			});
		
			// Now fill in our fields
			const fieldMap = {
				email : {
					'urlParam' : 'email',
					'fieldId' : 'j_id0:j_id2:theForm:email'
				},
				fname : {
					'urlParam' : 'fname',
					'fieldId' : 'j_id0:j_id2:theForm:firstName'
				},
				lname : {
					'urlParam' : 'lname',
					'fieldId' : 'j_id0:j_id2:theForm:lastName'
				}
			};
		
			Object.entries(fieldMap).forEach(([k, v]) => {
				let fillElement = document.getElementById(v.fieldId);
				console.log(typeof result[v.urlParam]);
				if(fillElement !== null && typeof result[v.urlParam] !== 'undefined' && result[v.urlParam] != '') {
					if(fillElement.value == '') {
						fillElement.value = result[v.urlParam];
						fillElement.classList.add('cc-text-review');
						if ("createEvent" in document) {
							var evt = document.createEvent("HTMLEvents");
							evt.initEvent("change", false, true);
							fillElement.dispatchEvent(evt);
						}
						else{
							fillElement.fireEvent("onchange");
						}
					}
				}
			});
		} catch(e){
			console.log(e);
		}
      }
      prefillDetails();
      
  </script>
</apex:page>